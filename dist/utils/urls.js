var $=(z)=>{let A=z.split("/");if(A[0]==="")A.shift();return A},Q=(z)=>{let{groups:A,path:E}=B(z),J=$(E);return F(J,A)},B=(z)=>{let A=[];return z=z.replace(/\{[^}]+\}/g,(E,J)=>{let H=`@${J}`;return A.push([H,E]),H}),{groups:A,path:z}},F=(z,A)=>{for(let E=A.length-1;E>=0;E--){let[J]=A[E];for(let H=z.length-1;H>=0;H--)if(z[H].includes(J)){z[H]=z[H].replace(J,A[E][1]);break}}return z},W={},f=(z,A)=>{if(z==="*")return"*";let E=z.match(/^\:([^\{\}]+)(?:\{(.+)\})?$/);if(E){let J=`${z}#${A}`;if(!W[J])if(E[2])W[J]=A&&A[0]!==":"&&A[0]!=="*"?[J,E[1],new RegExp(`^${E[2]}(?=/${A})`)]:[z,E[1],new RegExp(`^${E[2]}$`)];else W[J]=[z,E[1],!0];return W[J]}return null},Y=(z,A)=>{try{return A(z)}catch{return z.replace(/(?:%[0-9A-Fa-f]{2})+/g,(E)=>{try{return A(E)}catch{return E}})}},M=(z)=>Y(z,decodeURI),S=(z)=>{let A=z.indexOf("/",z.indexOf(":")+4),E=A;for(;E<z.length;E++){let J=z.charCodeAt(E);if(J===37){let H=z.indexOf("?",E),N=z.slice(A,H===-1?void 0:H);return M(N.includes("%25")?N.replace(/%25/g,"%2525"):N)}else if(J===63)break}return z.slice(A,E)},D=(z)=>{let A=z.indexOf("?",8);return A===-1?"":"?"+z.slice(A+1)},j=(z)=>{let A=S(z.url);return A.length>1&&A.at(-1)==="/"?A.slice(0,-1):A},w=(z,A,...E)=>{if(E.length)A=w(A,...E);return`${z?.[0]==="/"?"":"/"}${z}${A==="/"?"":`${z?.at(-1)==="/"?"":"/"}${A?.[0]==="/"?A.slice(1):A}`}`},R=(z)=>{if(z.charCodeAt(z.length-1)!==63||!z.includes(":"))return null;let A=z.split("/"),E=[],J="";return A.forEach((H)=>{if(H!==""&&!/\:/.test(H))J+="/"+H;else if(/\:/.test(H))if(/\?/.test(H)){if(E.length===0&&J==="")E.push("/");else E.push(J);let N=H.replace("?","");J+="/"+N,E.push(J)}else J+="/"+H}),E.filter((H,N,L)=>L.indexOf(H)===N)},X=(z)=>{if(!/[%+]/.test(z))return z;if(z.indexOf("+")!==-1)z=z.replace(/\+/g," ");return z.indexOf("%")!==-1?Y(z,G):z},Z=(z,A,E)=>{let J;if(!E&&A&&!/[%+]/.test(A)){let L=z.indexOf(`?${A}`,8);if(L===-1)L=z.indexOf(`&${A}`,8);while(L!==-1){let T=z.charCodeAt(L+A.length+1);if(T===61){let O=L+A.length+2,V=z.indexOf("&",O);return X(z.slice(O,V===-1?void 0:V))}else if(T==38||isNaN(T))return"";L=z.indexOf(`&${A}`,L+1)}if(J=/[%+]/.test(z),!J)return}let H={};J??=/[%+]/.test(z);let N=z.indexOf("?",8);while(N!==-1){let L=z.indexOf("&",N+1),T=z.indexOf("=",N);if(T>L&&L!==-1)T=-1;let O=z.slice(N+1,T===-1?L===-1?void 0:L:T);if(J)O=X(O);if(N=L,O==="")continue;let V;if(T===-1)V="";else if(V=z.slice(T+1,L===-1?void 0:L),J)V=X(V);if(E){if(!(H[O]&&Array.isArray(H[O])))H[O]=[];H[O].push(V)}else H[O]??=V}return A?H[A]:H},U=Z,q=(z,A)=>{return Z(z,A,!0)},G=decodeURIComponent;export{M as tryDecodeURI,Y as tryDecode,Q as splitRoutingPath,$ as splitPath,w as mergePath,D as getQueryStrings,q as getQueryParams,U as getQueryParam,f as getPattern,j as getPathNoStrict,S as getPath,G as decodeURIComponent_,R as checkOptionalParameter};
