var t={reset:"\x1B[0m",info:"\x1B[36m",warn:"\x1B[33m",error:"\x1B[31m",method:{GET:"\x1B[32m",POST:"\x1B[34m",PUT:"\x1B[35m",DELETE:"\x1B[31m",PATCH:"\x1B[36m"}},u=(a,s,o)=>{let d=t[a]||t.reset,p=o?.method?t.method[o.method]||t.reset:t.reset,m=o?.status?o.status>=500?t.error:o.status>=400?t.warn:t.info:t.reset;console.log(`
${d}[${a.toUpperCase()}]${t.reset} ${s} - ${p}${o?.method||""}${t.reset}`);let n={timestamp:new Date().toISOString(),...o,status:o?.status?`${m}${o.status}${t.reset}`:void 0,method:o?.method?`${p>d}${o.method}${t.reset}`:void 0};console.log(JSON.stringify(n,null,2)+`
`)},R=(a)=>{let{app:s,logger:o,logLevel:d="info",onRequest:p,onSend:m,onError:n}=a||{};s?.addHooks("onRequest",(e)=>{e.req.startTime=Date.now(),o?.()??u(d,"Incoming Request",{method:e.req.method,url:e.path,headers:{"user-agent":e.req.headers.get("user-agent"),"content-type":e.req.headers.get("content-type")}}),p?.(e)}),s?.addHooks("onSend",async(e,r)=>{let i=`${Date.now()-e.req.startTime}ms`;o?.()??u(d,"Response Sent",{method:e.req.method,url:e.url.toString(),status:r.status,duration:i,reqId:e.get?.("requestId"),headers:{"content-type":r.headers.get("content-type")}});let g=await m?.(e);if(g instanceof Response)return g}),s?.addHooks("onError",async(e,r,i)=>{o?.()??u("error","Unhandled Error",{method:i.method,url:r,status:500,error:e.message});let g=await n?.(e,r,i);if(g instanceof Response)return g})},c=(a,s,o,d=0,p,m)=>{let n=t.method[s]||t.reset,e=d>=500?t.error:d>=400?t.warn:t.info,r=m?`[${m}] `:"",i=a==="<--"?`${a} ${n}${s}${t.reset} ${o} ${r}`:`${a} ${n}${s}${t.reset} ${o} ${e}${d}${t.reset} ${p??""} ${r}`;console.log(i)},$=(a)=>{let s=Date.now()-a;return s<1000?`${s}ms`:`${Math.round(s/1000)}s`},q=(a)=>{let{app:s,log:o,onRequest:d,onSend:p,onError:m}=a;s.addHooks("onRequest",(n)=>{let{req:e,path:r}=n;e.startTime=Date.now(),o?.()??c("<--",e.method,r),d?.(e,r)}),s.addHooks("onSend",async(n,e)=>{let{method:r,url:i}=n.req,g=new URL(i).pathname,l=n.get?.("requestId");o?.()??c("-->",r,g,e?.status,$(n.req.startTime),l);let h=await p?.(n);return h instanceof Response?h:e}),s.addHooks("onError",async(n,e,r)=>{let i=r.path;o?.()??c(n.message,r.method,i,500);let g=await m?.(n,i,r);if(g instanceof Response)return g})};export{q as logger,R as advancedLogger};
