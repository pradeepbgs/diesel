var t={reset:"\x1B[0m",info:"\x1B[36m",warn:"\x1B[33m",error:"\x1B[31m",method:{GET:"\x1B[32m",POST:"\x1B[34m",PUT:"\x1B[35m",DELETE:"\x1B[31m",PATCH:"\x1B[36m"}},u=(a,n,o)=>{let d=t[a]||t.reset,g=o?.method?t.method[o.method]||t.reset:t.reset,p=o?.status?o.status>=500?t.error:o.status>=400?t.warn:t.info:t.reset;console.log(`
${d}[${a.toUpperCase()}]${t.reset} ${n} - ${g}${o?.method||""}${t.reset}`);let s={timestamp:new Date().toISOString(),...o,status:o?.status?`${p}${o.status}${t.reset}`:void 0,method:o?.method?`${g>d}${o.method}${t.reset}`:void 0};console.log(JSON.stringify(s,null,2)+`
`)},R=(a)=>{let{app:n,logger:o,logLevel:d="info",onRequest:g,onSend:p,onError:s}=a||{};n?.addHooks("onRequest",(e)=>{e.req.startTime=Date.now(),o?.()??u(d,"Incoming Request",{method:e.req.method,url:e.pathname,headers:{"user-agent":e.req.headers.get("user-agent"),"content-type":e.req.headers.get("content-type")}}),g?.(e)}),n?.addHooks("onSend",async(e,r)=>{let i=`${Date.now()-e.req.startTime}ms`;o?.()??u(d,"Response Sent",{method:e.req.method,url:e.url.toString(),status:r.status,duration:i,reqId:e.get?.("requestId"),headers:{"content-type":r.headers.get("content-type")}});let m=await p?.(e);if(m instanceof Response)return m}),n?.addHooks("onError",async(e,r)=>{o?.()??u("error","Unhandled Error",{method:r.req.method,url:r.pathname,status:500,error:e.message});let i=await s?.(e,r);if(i instanceof Response)return i})},c=(a,n,o,d=0,g,p)=>{let s=t.method[n]||t.reset,e=d>=500?t.error:d>=400?t.warn:t.info,r=p?`[${p}] `:"",i=a==="<--"?`${a} ${s}${n}${t.reset} ${o} ${r}`:`${a} ${s}${n}${t.reset} ${o} ${e}${d}${t.reset} ${g??""} ${r}`;console.log(i)},$=(a)=>{let n=Date.now()-a;return n<1000?`${n}ms`:`${Math.round(n/1000)}s`},q=(a)=>{let{app:n,log:o,onRequest:d,onSend:g,onError:p}=a;n.addHooks("onRequest",(s)=>{let{req:e,pathname:r}=s;e.startTime=Date.now(),o?.()??c("<--",e.method,r),d?.(e,r)}),n.addHooks("onSend",async(s,e)=>{let{method:r,url:i}=s.req,m=new URL(i).pathname,l=s.get?.("requestId");o?.()??c("-->",r,m,e.status,$(s.req.startTime),l);let h=await g?.(s);if(h instanceof Response)return h}),n.addHooks("onError",async(s,e)=>{let{req:r,pathname:i}=e;o?.()??c(s.message,r.method,i,500);let m=await p?.(s,r,i);if(m instanceof Response)return m})};export{q as logger,R as advancedLogger};
